name: Deploy backend to EC2 with Docker

on: 
  push:
    branches:
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     

      - name: Build Docker Image
        run: docker build --platform linux/amd64 -t ashank2001/mcquizbackend .

      - name: Publish Image to docker hub
        run: docker push ashank2001/mcquizbackend:latest 
 
  deploy:
    needs: build
    runs-on: self-hosted 
    steps:
      - name: Pull image from docker hub
        run: docker pull ashank2001/mcquizbackend:latest 

      - name: Delete old container
        run: docker rm -f mcquizbackend-container || true

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET}}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
          echo "PAYHERE_MERCHANT_ID=${{ secrets.PAYHERE_MERCHANT_ID }}" >> .env
          echo "PAYHERE_MERCHANT_SECRET=${{ secrets.PAYHERE_MERCHANT_SECRET }}" >> .env
          echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env

      - name: Run Docker Container
        run: |
          docker run -d -p 3001:3001 --name mcquizbackend-container \
            --env-file .env \
            ashank2001/mcquizbackend:latest